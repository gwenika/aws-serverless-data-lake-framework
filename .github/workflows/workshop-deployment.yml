name: Workshop deployment

on:
  workflow_dispatch: #execution on-demand

env:
  AWS_REGION : eu-west-1

permissions:
  id-token: write #permission for OIDC to request token
  contents: read #permission to read repository content for checkout action

jobs:
  initial-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
      - name: Deploy SDLF workshop template to CloudFront
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: sdlf-workshop-deployment
          template: https://sdlf-os-public-artifacts.s3-us-west-2.amazonaws.com/v2/deploying-foundations/template.yaml
          no-fail-on-empty-changeset: "1"
  check-build-status:
    runs-on: ubuntu-latest
    needs: initial-setup
    steps:
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -u awscliv2.zip
          sudo ./aws/install --update
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
      - name: Get CodeBuild build status
        run: |
          project=$(aws cloudformation describe-stacks --region ${{ env.AWS_REGION }} --stack-name sdlf-workshop-deployment --query "Stacks[0].Outputs[?OutputKey=='oWorkshopProject'].OutputValue" --output text)
          build_id=$(aws codebuild list-builds-for-project --region ${{ env.AWS_REGION }} --project-name "$project" --query "ids[0]" --output text)
          build_status=$(aws codebuild batch-get-builds --region ${{ env.AWS_REGION }} --id "$build_id" --query builds[0].buildStatus --output text)
          while [ "$build_status" == "IN_PROGRESS" ]; do echo "build is in progress..."; sleep 30; build_status=$(aws codebuild batch-get-builds --region ${{ env.AWS_REGION }} --id "$build_id" --query builds[0].buildStatus --output text); done
  deploy-foundations-teams:
    runs-on: ubuntu-latest
    needs: check-build-status
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 2.0.1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
      - name: Setup python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install preprequisites
        run: |
          python -m pip install --upgrade pip
          python -m pip install git-remote-codecommit
      - name: Deploying SDLF foundations & teams
        run: |
          git config --global user.name "robot"
          git config --global user.email "robot@example.com"
          cd ./sdlf-utils/workshop-examples/10-deployment/sdlf-main
          git init
          git remote add origin codecommit::${{ env.AWS_REGION }}://sdlf-main
          git checkout -b dev
          git add .
          git commit --allow-empty -m "Deploying the SDLF Foundations for the dev environment in the datalake data domain"
          git push -u origin dev -f
  check-pipelines-status:
    runs-on: ubuntu-latest
    needs: deploy-foundations-teams
    steps:
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -u awscliv2.zip
          sudo ./aws/install --update
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
      - name: Get CodePipeline pipelines status
        run: |
          cicd_repo=$(aws codepipeline --region ${{ env.AWS_REGION }} list-pipelines --query "pipelines[?starts_with(name, 'sdlf-cicd-sdlf-repositories-rCloudFormationModulesDevDeploymen-rMainRepositoryPipeline')].name" --output text)
          repo_status=$(aws codepipeline --region eu-west-1 list-pipeline-executions --pipeline-name $cicd_repo --query "pipelineExecutionSummaries[0].status" --output text)
          while [ "$repo_status" == "InProgress" ]; do echo "pipeline in progress..."; sleep 30; repo_status=$(aws codepipeline --region ${{ env.AWS_REGION }} list-pipeline-executions --pipeline-name $cicd_repo --query "pipelineExecutionSummaries[0].status" --output text); done
          cicd_domain=$(aws codepipeline --region ${{ env.AWS_REGION }} list-pipelines --query "pipelines[?starts_with(name, 'sdlf-cicd-domain-datalake-dev-rDomainCodePipeline')].name" --output text)
          domain_status=$(aws codepipeline --region eu-west-1 list-pipeline-executions --pipeline-name $cicd_domain --query "pipelineExecutionSummaries[0].status" --output text)
          while [ "$domain_status" == "InProgress" ]; do echo "pipeline in progress..."; sleep 30; domain_status=$(aws codepipeline --region ${{ env.AWS_REGION }} list-pipeline-executions --pipeline-name $cicd_domain --query "pipelineExecutionSummaries[0].status" --output text); done
  deploy-pipeline-dataset:
    runs-on: ubuntu-latest
    needs: check-pipelines-status
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 2.0.1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
      - name: Setup python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install preprequisites
        run: |
          python -m pip install --upgrade pip
          python -m pip install git-remote-codecommit
      - name: Deploying SDLF foundations & teams
        run: |
          git config --global user.name "robot"
          git config --global user.email "robot@example.com"    
          cd ./sdlf-utils/workshop-examples/10-deployment/sdlf-main-datalake-engineering
          git init
          git remote add origin codecommit::${{ env.AWS_REGION }}://sdlf-main-datalake-engineering
          git checkout -b dev
          git add .
          git commit --allow-empty -m "Creating the legislators dataset"
          git push origin dev -f